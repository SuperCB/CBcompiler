cblex:
  - val: void
    name: Void
  - val: int
    name: Int
  - val: const
    name: Const
  - val: while
    name: While
  - val: if
    name: If
  - val: else
    name: Else
  - val: return
    name: Return
  - val: break
    name: Break
  - val: continue
    name: Continue
  - val: '\\+'
    name: Add
  - val: '-'
    name: Sub
  - val: '\\*'
    name: Mul
  - val: /
    name: Div
  - val: '%'
    name: Mod
  - val: <
    name: Lt
  - val: <=
    name: Le
  - val: >
    name: Gt
  - val: '>='
    name: Ge
  - val: '=='
    name: Eq
  - val: '!='
    name: 'Ne'
  - val: '&&'
    name: And
  - val: '||'
    name: Or
  - val: =
    name: Assign
  - val: ','
    name: Comma
  - val: ';'
    name: Semi
  - val: '!'
    name: Not
  - val: '\\('
    name: LPar
  - val: '\\)'
    name: RPar
  - val: '\\['
    name: LBrk
  - val: '\\]'
    name: RBrk
  - val: '{'
    name: LBrc
  - val: '}'
    name: RBrc
  - val: '[_A-Za-z]\w*'
    name: ID
  - val: '\d+|(0x[0-9a-fA-F]+)'
    name: IntConst


cbsion:
  root: Program
  exprs:
    - lval: Program
      rval:
        - val:
            - Program
            - Decl
          act: |
            // Program  Program Decl
        - val:
            - Program
            - Func
          act: |
            // Program Program Func
        - val:
            - Decl
          act: |
            // Program  Program Decl
        - val:
            - Func
          act: |
            // Program Program Func
        
            

    - lval: Decl
      rval:
        - val:
            - Const
            - Int
            - DeclList
            - Semi
          act: |
            // Decl Const Int DeclList Semi
        - val:
            - Int
            - DeclList
            - Semi
          act: |
            // Decl Int DeclList Semi




    - lval: DeclList
      rval:
        - val:
            - DeclList
            - Comma
            - Decl1
          act: |
            // DeclList DeclList1
        - val:
            - Decl1
          act: |
            // DeclList Decl1



    - lval: Decl1
      rval:
        - val:
            - ID
            - ArrayDims
            - Assign
            - InitList
          act: |
              // Decl1 ID ArrayDims Assign InitList
        - val:
            - ID
            - ArrayDims
          act: |
              // Decl1 ID ArrayDims
        - val:
            - ID
            - Assign
            - InitList
          act: |
              // Decl1 ID ArrayDims Assign InitList
        - val:
            - ID
          act: |
              // Decl1 ID ArrayDims

    - lval: InitList
      rval:
        - val:
            - LBrc
            - InitList1
            - RBrc
          act: |
              // InitList LBrc InitList1 RBrc
        - val:
            - LBrc
            - RBrc
          act: |
              //  InitList LBrc RBrc
        - val:
            - Expr
          act: |
              //  InitList Expr


    - lval: InitList1
      rval:
        - val:
            - InitList1
            - Comma
            - InitList
          act: |
              // InitList1 InitList1 Comma InitList
        - val:
            - InitList
          act: |
              //InitList1   InitList 

    - lval: Func
      rval:
        - val:
            - Int
            - ID
            - LPar
            - ParamList
            - RPar
            - Block
          act: |
             //Func Int', 'Ident', 'LPar', 'ParamList', 'RPar', 'Block'

        - val:
            - Void
            - ID
            - LPar
            - ParamList
            - RPar
            - Block
          act: |
              // Func 'Void', 'Ident', 'LPar', 'ParamList', 'RPar', 'Block'
        - val:
            - Int
            - ID
            - LPar
            - RPar
            - Block
          act: |
              //Func Int', 'Ident', 'LPar', 'ParamList', 'RPar', 'Block'

        - val:
            - Void
            - ID
            - LPar
            - RPar
            - Block
          act: |
              // Func 'Void', 'Ident', 'LPar', 'ParamList', 'RPar', 'Block'

    - lval: Block
      rval:
        - val:
            - LBrc
            - StmtList
            - RBrc
          act: |
              // Block LBrc StmtList RBrc
        - val:
            - LBrc
            - RBrc
          act: |
              // Block LBrc StmtList RBrc    


    

    - lval: ParamList
      rval:
        - val:
            - ParamList
            - Comma
            - Param
          act: |
            //ParamList1 ParamList1', 'Comma 'Param

        - val:
            - Param
          act: |
            //ParamList1 Param

    - lval: Expr
      rval:
        - val:
            - Expr
            - Add
            - Expr
          act: |
            //   Expr Expr Add Expr
        - val:
            - Expr
            - Sub
            - Expr
          act: |
            //   Expr Expr Sub Expr

        - val:
            - Expr
            - Mul
            - Expr
          act: |
            //Expr Mul Expr

        - val:
            - Expr
            - Div
            - Expr
          act: |
            //   Expr Expr Div Expr

        - val:
            - Expr
            - Mod
            - Expr
          act: |
            //   Expr Expr Mod Expr

        - val:
            - Expr
            - Lt
            - Expr
          act: |
            //   Expr Expr Lt Expr

        - val:
            - Expr
            - Le
            - Expr
          act: |
            //   Expr Expr Le Expr

        - val:
            - Expr
            - Gt
            - Expr
          act: |
            //   Expr Expr Gt Expr

        - val:
            - Expr
            - Ge
            - Expr
          act: |
            //   Expr Expr Ge Expr

        - val:
            - Expr
            - Eq
            - Expr
          act: |
            //   Expr Expr Eq Expr

        - val:
            - Expr
            - Ne
            - Expr
          act: |
            //   Expr Expr Ne Expr

        - val:
            - Expr
            - And
            - Expr
          act: |
            //   Expr Expr And Expr

        - val:
            - Expr
            - Or
            - Expr
          act: |
            ////   Expr Expr Or Expr
        - val:
            - Add
            - Expr
          act: |
            //   Expr  Add Expr

        - val:
            - Sub
            - Expr
          act: |
            //   Expr  Sub Expr

        - val:
            - Not
            - Expr
          act: |
            //   Expr  Not Expr

        - val:
            - LPar
            - Expr
            - RPar
          act: |
            // Expr  LPar Expr RPar

        #这是函数调用
        - val:
            - ID
            - LPar
            - ExprList
            - RPar
          act: |
            // Expr Ident LPar ExprList RPar
        - val:
            - ID
            - LPar
            - RPar
          act: |
            // Expr Ident LPar ExprList RPar

        - val:
            - ID
            - ArrayDims
          act: |
            //Expr ID ArrayDims
        - val:
            - ID
          act: |
            // Expr  IntConst            
        

        - val:
            - IntConst
          act: |
            // Expr  IntConst
     



    - lval: Param
      rval:
        - val:
            - Int
            - ID
            - FunArrayDims
          act: |
            // Param Int ID FunArrayDims
        - val:
            - Int
            - ID
          act: |
            // Param Int ID

    - lval: Stmt
      rval:
        - val:
            - ID
            - ArrayDims
            - Assign
            - Expr
            - Semi
          act: |
               //Stmt    Ident', 'ArrayDims', 'Assign', 'Expr', 'Semi'

        - val:
            - ID
            - Assign
            - Expr
            - Semi
          act: |
                //Stmt    Ident', 'ArrayDims', 'Assign', 'Expr', 'Semi'
            

        - val:
            - Expr
            - Semi
          act: |
            //Stmt Expr', 'Semi'
        - val:
            - Semi
          act: |
            //Stmt Semi

        - val:
            - Decl
          act: |
            //Stmt Decl

        - val:
            - Block
          act: |
            //Stmt Block

        - val:
            - If
            - LPar
            - Expr
            - RPar
            - Stmt
          act: |
              //Stmt 'If', 'LPar', 'Expr', 'RPar', 'Stmt', 'Else0'

        - val:
            - If
            - LPar
            - Expr
            - RPar
            - Stmt
            - Else
            - Stmt
          act: |
            //Stmt 'If', 'LPar', 'Expr', 'RPar', 'Stmt', 'Else0'
        - val:
            - While
            - LPar
            - Expr
            - RPar
            - Stmt
          act: |
            //Stmt While', 'LPar', 'Expr', 'RPar', 'Stmt'
        - val:
            - Break
            - Semi
          act: |
            //Stmt Break', 'Semi'
        - val:
            - Continue
            - Semi
          act: |
            //Stmt Continue', 'Semi
        - val:
            - Return
            - Expr
            - Semi
          act: |
            //stmt  Return', 'Expr', 'Semi'
        - val:
            - Return
            - Semi
          act: |
            //stmt return semi





    - lval: StmtList
      rval:
        - val:
            - StmtList
            - Stmt
          act: |
            // StmtList StmtList
        - val :
            - Stmt
          act : |
              // fadsf 
      
    





    - lval: ExprList
      rval:
        - val:
            - ExprList
            - Comma
            - Expr
          act: |
            // ExprList1 ExprList1', 'Comma', 'Expr'
        - val:
            - Expr
          act: |
            //ExprList1 Expr





    - lval: FunArrayDims
      rval:
        - val:
            - FunArrayDims
            - LBrk
            - Expr
            - RBrk
          act: |
            // FunArrayDims LBrk Expr RBrk
        - val:
            - LBrk
            - RBrk
          act: |
            //  FunArrayDims  LBrk', 'RBrk

    - lval: ArrayDims
      rval:
        - val:
            - ArrayDims
            - LBrk
            - Expr
            - RBrk
          act: |
            //ArrayDims   ArrayDims', 'LBrk', 'Expr', 'RBrk'
        - val :
            - LBrk
            - Expr
            - RBrk
          act : |
            // fdsaf 
       

  priority:
    - tokens:
        - Or
      level: 1
    - tokens:
        - And
      level: 2
    - tokens:
        - Eq
        - Ne
      level: 3
    - tokens:
        - Lt
        - Le
        - Ge
        - Gt
      level: 4
    - tokens:
        - Add
        - Sub
      level: 5
    - tokens:
        - Mul
        - Div
        - Mod
      level: 6
